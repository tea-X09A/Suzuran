{
  "permissions": {
    "allow": [
      "Bash(chmod:*)",
      "Bash(npm run build:*)",
      "Bash(npx tsc:*)",
      "Bash(rm:*)",
      "Bash(npm run dev:*)",
      "Bash(pkill:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run type-check:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(npm install:*)",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "mcp__ide__getDiagnostics",
      "Bash(npm run lint)",
      "Bash(npm run:*)",
      "Bash(ls:*)",
      "Bash(npm cache clean:*)",
      "Bash(sudo chown:*)",
      "Bash(npm start)",
      "Bash(true)",
      "Bash(curl:*)",
      "Bash(echo $NODE_ENV)",
      "Bash(cat:*)",
      "Bash(npx eslint:*)",
      "Bash(npx vite:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(npm test)",
      "Bash(npm test:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(npx prettier:*)",
      "Bash(git restore:*)",
      "Bash(npx stylelint:*)",
      "Bash(node:*)",
      "Bash(timeout 15 npm run dev)",
      "Bash(rg:*)",
      "Bash(npx tsx:*)",
      "Bash(vite build)",
      "Bash(npx:*)",
      "Bash(git reset:*)",
      "Bash(npm:*)",
      "mcp__ide__executeCode",
      "Bash(NODE_ENV=development vite build --mode development)",
      "Bash(sed:*)",
      "Bash(timeout 30s npm test -- src/utils/__tests__/imageValidation.test.ts --verbose)",
      "Bash(timeout 10s npm run dev)",
      "Bash(git rm:*)",
      "Bash(if git push -u origin HEAD)",
      "Bash(then)",
      "Bash(else)",
      "Bash(if git push origin main)",
      "Bash(exit 1)",
      "Bash(fi)",
      "Bash(tsc:*)",
      "Bash(timeout 15s npm run dev)",
      "Bash(git clean:*)",
      "Bash(electron:*)",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__onboarding",
      "mcp__serena__list_dir",
      "mcp__serena__write_memory",
      "mcp__serena__find_symbol",
      "mcp__serena__search_for_pattern",
      "mcp__serena__think_about_collected_information",
      "mcp__serena__think_about_whether_you_are_done",
      "mcp__serena__find_file",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__replace_symbol_body",
      "mcp__serena__read_memory",
      "mcp__serena__think_about_task_adherence",
      "mcp__serena__find_referencing_symbols",
      "Bash(git pull:*)",
      "mcp__serena__insert_after_symbol",
      "Bash(git log:*)",
      "Bash(/bashes)",
      "Bash(godot:*)",
      "Bash(tree:*)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  },
  "enableAllProjectMcpServers": false,
  "enabledMcpjsonServers": []
}